// <auto-generated />
using System;
using DBPractise.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DBPractise.Migrations
{
    [DbContext(typeof(DbOsiedleContext))]
    partial class DbOsiedleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DBPractise.Models.Blok", b =>
                {
                    b.Property<int>("IdBlk")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id bloku")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Id osiedla")
                        .HasColumnType("int");

                    b.Property<int>("NrBloku")
                        .HasColumnName("Numer bloku")
                        .HasColumnType("int");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnName("Ulica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Zarobki")
                        .HasColumnName("Zarobki")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdBlk");

                    b.HasIndex("Id osiedla");

                    b.ToTable("Blok");
                });

            modelBuilder.Entity("DBPractise.Models.BlokParking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdBlok")
                        .HasColumnType("int");

                    b.Property<int>("IdParking")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBlok");

                    b.HasIndex("IdParking");

                    b.ToTable("Blok_Parking");
                });

            modelBuilder.Entity("DBPractise.Models.Osiedle", b =>
                {
                    b.Property<int>("Id_os")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id osiedla")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Id zarządcy")
                        .HasColumnType("int");

                    b.Property<int>("Lb_Mieszk")
                        .HasColumnName("Liczba mieszkańców")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa_os")
                        .IsRequired()
                        .HasColumnName("Nazwa osiedla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_os");

                    b.HasIndex("Id zarządcy");

                    b.ToTable("Osiedle");
                });

            modelBuilder.Entity("DBPractise.Models.Parking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id parkingu")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Lb_Miejsc_Dla_Inw")
                        .HasColumnName("Ilosc Miejsc Dla Inwalidow")
                        .HasColumnType("int");

                    b.Property<int>("Lb_Miejsc_Park")
                        .HasColumnName("Ilosc Miejsc Parkingowych")
                        .HasColumnType("int");

                    b.Property<int>("Lb_Przypis_Miejsc")
                        .HasColumnName("Ilosc Przypisanych Miejsc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Parking");
                });

            modelBuilder.Entity("DBPractise.Models.Zarzadca", b =>
                {
                    b.Property<int>("IdZarzadcy")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id zarządcy")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Id osiedla")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnName("Imię")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnName("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Zarobki")
                        .HasColumnName("Zarobki")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdZarzadcy");

                    b.HasIndex("Id osiedla");

                    b.ToTable("Zarządca");
                });

            modelBuilder.Entity("DBPractise.Models.Blok", b =>
                {
                    b.HasOne("DBPractise.Models.Osiedle", "Osiedle")
                        .WithMany()
                        .HasForeignKey("Id osiedla");
                });

            modelBuilder.Entity("DBPractise.Models.BlokParking", b =>
                {
                    b.HasOne("DBPractise.Models.Blok", "Blok")
                        .WithMany("BlokiParkingi")
                        .HasForeignKey("IdBlok")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBPractise.Models.Parking", "Parking")
                        .WithMany("BlokiParkingi")
                        .HasForeignKey("IdParking")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DBPractise.Models.Osiedle", b =>
                {
                    b.HasOne("DBPractise.Models.Zarzadca", "Zarzadca")
                        .WithMany()
                        .HasForeignKey("Id zarządcy");
                });

            modelBuilder.Entity("DBPractise.Models.Zarzadca", b =>
                {
                    b.HasOne("DBPractise.Models.Osiedle", "Osiedle")
                        .WithMany()
                        .HasForeignKey("Id osiedla");
                });
#pragma warning restore 612, 618
        }
    }
}
